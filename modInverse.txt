// Function to compute (a^(m-2)) % m using fast exponentiation
public static long modInverse(long a, long m) {
    return powerMod(a, m - 2, m);
}

// Function to compute (x^y) % p using binary exponentiation
public static long powerMod(long x, long y, long p) {
    long res = 1;
    x = x % p;

    while (y > 0) {
        if ((y & 1) == 1) {
            res = (res * x) % p;
        }
        x = (x * x) % p;
        y >>= 1;
    }

    return res;
}
